// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma
// prisma/schema.prisma
// prisma/schema.prisma
// prisma/schema.prisma
// prisma/schema.prisma
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Flashcard {
  id         Int        @id @default(autoincrement())
  question   String
  options    Option[]   @relation("FlashcardOptions")
  answer     Answer[]   @relation("FlashcardAnswers")
  createdBy  Admin?     @relation("CreatedByAdmin", fields: [createdById], references: [id])
  createdById Int?
  updatedBy  Admin?     @relation("UpdatedByAdmin", fields: [updatedById], references: [id])
  updatedById Int?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Option {
  id          Int       @id @default(autoincrement())
  flashcardId  Int
  text        String
  flashcard   Flashcard @relation("FlashcardOptions", fields: [flashcardId], references: [id])
}

model Answer {
  id          Int       @id @default(autoincrement())
  flashcardId  Int
  heading     String?
  paragraph   String?
  flashcard   Flashcard @relation("FlashcardAnswers", fields: [flashcardId], references: [id])
}

model Admin {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  password  String
  flashcardsCreated Flashcard[] @relation("CreatedByAdmin")
  flashcardsUpdated Flashcard[] @relation("UpdatedByAdmin")
}
